import type { NextPage } from "next"
import Link from 'next/link'
import Head from 'next/head'
import { useRouter } from 'next/router'
import { GetStaticProps } from "next";
import { GetStaticPaths } from 'next';
import { products, categories } from "../../../products.dummy"
import Navbar from "../../../components/navbar"
import BottomNavbar from "../../../components/bottomNavbar";

type CategoryProps = {
    catName: string;
}

const Category: NextPage<CategoryProps> = (props: CategoryProps) => {
    const router = useRouter()
    const { catName } = router.query ? router.query : props
    let productsToDisplay = products.filter((item: Product) => item.category === catName)

    return (
        <div>
            <Head>
                <title>{catName}</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className="relative flex flex-col mt-20 mb-20">
                <Navbar/>
                <main className="max-w-full">
                    <div className="px-6">
                        <div className="pt-6">
                            <div className="text-sm flex text-yellow-600">
                                <Link href="/">Home</Link>
                                <div className="pl-2">
                                    {`>`}
                                </div>
                                <div className="pl-2 text-gray-600">
                                    {catName}
                                </div>
                            </div>
                            <div className="text-lg sm:text-2xl pt-6 font-semibold">
                                {catName}
                            </div>
                        </div>
                    </div>
                    <div className="pt-10 px-6 pb-10">
                        <div className="grid justify-items-center grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-y-6 gap-x-4 md:gap-x-6 md:gap-y-8">
                            {productsToDisplay.map((item: Product, index: number) => {
                                return (
                                    <div key={index} className="p-4 bg-white border border-gray-300 rounded-md w-72">
                                        <div className="flex flex-col max-w-full">
                                            <div className="p-1 my-2 w-16 flex items-center justify-center bg-green-600 text-white text-xs uppercase rounded-md font-bold">
                                                {item.discount}% Off
                                            </div>
                                            <div className="mb-3 flex justify-center">
                                                <Link href={`/category/${catName}/${item.id}`}>
                                                    <img className="h-32 w-32 object-fit" src={item.img_lg}/>
                                                </Link>
                                            </div>
                                            <div className="flex items-end text-yellow-600 font-bold text-base mb-2">
                                                ₹{item.price}
                                                <div className="line-through text-sm text-gray-600 font-medium pl-2">
                                                    ₹{item.price_before_discount}
                                                </div>
                                            </div>
                                            <div className="text-gray-600 tracking-wide text-sm overflow-hidden overflow-ellipsis whitespace-nowrap mb-1">
                                                {item.name}
                                            </div> 
                                            <div className="text-xs text-gray-600">
                                                {item.quantity}
                                            </div> 
                                            <div className="mt-3 flex-1">
                                                <button className="text-center font-semibold border border-yellow-600 rounded-md text-yellow-600 p-1 uppercase text-sm focus:outline-none hover:bg-yellow-600 hover:text-white w-full">
                                                    ADD TO CART
                                                </button> 
                                            </div>
                                        </div>
                                </div>
                                )
                            })}
                        </div>
                    </div>
                </main>
                <BottomNavbar/>
            </div>
        </div>
    )
}

export const getStaticPaths: GetStaticPaths = async(ctx: any) => {
    const paths = categories.map((cat: Category) => ({
        params: { catName: cat.name }
    }))
    return { paths, fallback: false }
}

export const getStaticProps: GetStaticProps = async(ctx: any) =>{
    const { catName } = ctx.params
    return {
        props: { catName }
    }
}

export default Category