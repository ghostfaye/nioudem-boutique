import { useContext } from 'react';
import type { NextPage } from 'next';
import Link from 'next/link';
import Head from 'next/head';
import Image from 'next/image';
import { GetStaticProps } from 'next';
import { GetStaticPaths } from 'next';
import { products, categories } from '../../../products.dummy';
import Navbar from '../../../components/navbar';
import BottomNavbar from '../../../components/bottomNavbar';
import { ActionButtonLarge } from '../../../components/actionButton';
import { AuthContext } from '../../../context/AuthContext';
import { CartContext } from '../../../context/CartContext';

type ProductProps = {
    catName: string;
    id: string;
};

const Product: NextPage<ProductProps> = (props: ProductProps) => {
    const { catName, id } = props;
    const { isAuth, authLoading } = useContext(AuthContext);
    const { cart, addItem, removeItem, cartLoading } = useContext(CartContext);
    const product = products[parseInt(id) - 1];

    const getPriceDifference = (item: Product) => {
        return parseInt(item.price_before_discount) - parseInt(item.price);
    };

    return (
        <div>
            <Head>
                <title>{product.name}</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <div className="relative flex flex-col mt-20 mb-20">
                <Navbar />
                {cartLoading || authLoading ? (
                    <div className="flex justify-center items-center mt-20 pt-20">
                        <div className="h-2.5 w-2.5 bg-yellow-600 rounded-full mr-1 animate-bounce"></div>
                        <div className="h-2.5 w-2.5 bg-yellow-600 rounded-full mr-1 animate-bounce200"></div>
                        <div className="h-2.5 w-2.5 bg-yellow-600 rounded-full animate-bounce400"></div>
                    </div>
                ) : (
                    <main className="max-w-full">
                        <div className="px-6">
                            <div className="pt-6">
                                <div className="text-sm flex text-yellow-600">
                                    <Link href="/">Home</Link>
                                    <div className="pl-2">{`>`}</div>
                                    <div className="pl-2 overflow-hidden overflow-ellipsis whitespace-nowrap">
                                        <Link href={`/category/${catName}`}>{catName}</Link>
                                    </div>
                                    <div className="pl-2">{`>`}</div>
                                    <div className="pl-2 text-gray-600 overflow-hidden overflow-ellipsis whitespace-nowrap">
                                        {product.name}
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div className="p-6 md:py-6 lg:px-20">
                            <div className="bg-white border border-gray-300 px-6 py-2">
                                {product.discount && (
                                    <div className="sm:hidden my-2 w-16">
                                        <div className="p-1 flex items-center justify-center bg-green-600 text-white text-xs uppercase rounded-md font-bold">
                                            {product.discount}% Off
                                        </div>
                                    </div>
                                )}
                                <div className="flex flex-col items-center md:items-start md:flex-row md:justify-center">
                                    <div className='h-48 w-48 md:h-96 md:w-96 md:pb-10 md:pr-10 relative'>
                                        <div className='absolute w-full h-full'>
                                            <Image
                                                alt={product.name}
                                                src={product.img_lg}
                                                layout='fill'
                                                objectFit='contain'
                                            />
                                        </div>
                                    </div>
                                    {/* <img
                                        src={product.img_lg}
                                        className="object-fit h-48 w-48 md:h-96 md:w-96 md:pb-10 md:pr-10"
                                    /> */}
                                    <div className="flex flex-col items-center md:items-start lg:pl-10 md:pt-10">
                                        {product.discount && (
                                            <div className="hidden sm:block my-2 w-16">
                                                <div className="p-1 flex items-center justify-center bg-green-600 text-white text-xs uppercase rounded-md font-bold">
                                                    {product.discount}% Off
                                                </div>
                                            </div>
                                        )}
                                        <div className="md:text-2xl fomt-semibold text-center md:text-left">
                                            {product.name}
                                        </div>
                                        <div className="text-sm text-gray-600 py-1">
                                            {product.quantity}
                                        </div>
                                        <div className="hidden sm:block pt-4 flex flex-col text-sm font-medium sm:text-base">
                                            {product.price_before_discount && (
                                                <div className="flex flex-row justify-start pb-1 text-gray-600 text-sm">
                                                    MRP:
                                                    <div className="line-through text-gray-600 pl-3 font-medium">
                                                        ₹{product.price_before_discount}
                                                    </div>
                                                </div>
                                            )}
                                            <div className="flex flex-row justify-start pb-1 text-yellow-600 py-1">
                                                Price:
                                                <div className="font-bold pl-3">
                                                    ₹{product.price}
                                                </div>
                                            </div>
                                            {product.price_before_discount && (
                                                <div className="flex flex-row justify-start pb-2 text-gray-600 text-sm pt-1">
                                                    You Save:
                                                    <div className="pl-3 text-yellow-600 font-medium">
                                                        ₹{getPriceDifference(product)}
                                                    </div>
                                                </div>
                                            )}
                                        </div>
                                        <div className="sm:hidden flex flex-row items-end font-medium py-2">
                                            <div className="font-bold pl-3 text-yellow-600">
                                                ₹{product.price}
                                            </div>
                                            {product.price_before_discount && (
                                                <div className="line-through text-gray-800 pl-3 text-sm">
                                                    ₹{product.price_before_discount}
                                                </div>
                                            )}
                                        </div>
                                        {product.price_before_discount && (
                                            <div className="sm:hidden text-gray-600 text-sm flex flex-row">
                                                You save:{' '}
                                                <div className="pl-2 text-yellow-600 font-medium">
                                                    ₹{getPriceDifference(product)}
                                                </div>
                                            </div>
                                        )}
                                        <div className="pt-5">
                                            <div className="flex flex-col">
                                                <ActionButtonLarge
                                                    isAuth={isAuth}
                                                    cart={cart}
                                                    product={product}
                                                    addItem={addItem!}
                                                    removeItem={removeItem!}
                                                />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </main>
                )}
                <BottomNavbar />
            </div>
        </div>
    );
};

export const getStaticPaths: GetStaticPaths = async (ctx: any) => {
    const paths = products.map((item: Product) => ({
        params: { catName: item.category, id: item.id },
    }));
    return { paths, fallback: false };
};

export const getStaticProps: GetStaticProps = async (ctx: any) => {
    const { catName, id } = ctx.params;
    return {
        props: { catName, id },
    };
};

export default Product;
